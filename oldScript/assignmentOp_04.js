/**
 * JavaScript Assignment Operators (ржЬрж╛ржнрж╛рж╕рзНржХрзНрж░рж┐ржкрзНржЯ ржЕрзНржпрж╛рж╕рж╛ржЗржиржорзЗржирзНржЯ ржЕржкрж╛рж░рзЗржЯрж░рж╕ржорзВрж╣)
JavaScript-ржП Assignment Operators ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓рзЗрж░ ржоржзрзНржпрзЗ ржорж╛ржи рж╕ржВрж░ржХрзНрж╖ржг ржмрж╛ ржЖржкржбрзЗржЯ ржХрж░рж╛рж░ ржЬржирзНржпред

рзз. Basic Assignment (=)
ЁЯСЙ ржПржЯрж┐ ржПржХржЯрж┐ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓рзЗ ржорж╛ржи рж╕рзЗржЯ ржХрж░рждрзЗ ржмрзНржпржмрж╣рзГржд рж╣ржпрж╝ред

js
Copy
Edit
let x = 10;  // x ржПрж░ ржорж╛ржи 10
рзи. Addition Assignment (+=)
ЁЯСЙ ржПржЯрж┐ ржПржХржЯрж┐ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓рзЗрж░ ржмрж░рзНрждржорж╛ржи ржорж╛ржирзЗрж░ рж╕рж╛ржерзЗ ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржорж╛ржи ржпрзЛржЧ ржХрж░рзЗ ржПржмржВ ржлрж▓рж╛ржлрж▓ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗред

js
Copy
Edit
let x = 5;
x += 3;  // x = x + 3  (ржПржЦржи x ржПрж░ ржорж╛ржи 8)
рзй. Subtraction Assignment (-=)
ЁЯСЙ ржПржЯрж┐ ржмрж░рзНрждржорж╛ржи ржорж╛ржи ржерзЗржХрзЗ ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржорж╛ржи ржмрж┐ржпрж╝рзЛржЧ ржХрж░рзЗ ржПржмржВ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗред

js
Copy
Edit
let x = 10;
x -= 4;  // x = x - 4  (ржПржЦржи x ржПрж░ ржорж╛ржи 6)
рзк. Multiplication Assignment (*=)
ЁЯСЙ ржПржЯрж┐ ржмрж░рзНрждржорж╛ржи ржорж╛ржирзЗрж░ рж╕рж╛ржерзЗ ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржорж╛ржи ржЧрзБржг ржХрж░рзЗ ржПржмржВ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗред

js
Copy
Edit
let x = 6;
x *= 2;  // x = x * 2  (ржПржЦржи x ржПрж░ ржорж╛ржи 12)
рзл. Division Assignment (/=)
ЁЯСЙ ржПржЯрж┐ ржмрж░рзНрждржорж╛ржи ржорж╛ржиржХрзЗ ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржорж╛ржи ржжрзНржмрж╛рж░рж╛ ржнрж╛ржЧ ржХрж░рзЗ ржПржмржВ ржлрж▓рж╛ржлрж▓ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗред

js
Copy
Edit
let x = 20;
x /= 5;  // x = x / 5  (ржПржЦржи x ржПрж░ ржорж╛ржи 4)
рзм. Modulus Assignment (%=)
ЁЯСЙ ржПржЯрж┐ ржмрж░рзНрждржорж╛ржи ржорж╛ржиржХрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржорж╛ржи ржжрзНржмрж╛рж░рж╛ ржнрж╛ржЧ ржХрж░рж╛рж░ ржкрж░ ржЕржмрж╢рж┐рж╖рзНржЯрж╛ржВрж╢ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗред

js
Copy
Edit
let x = 17;
x %= 3;  // x = x % 3  (ржПржЦржи x ржПрж░ ржорж╛ржи 2)
рзн. Exponentiation Assignment (**=)
ЁЯСЙ ржПржЯрж┐ ржмрж░рзНрждржорж╛ржи ржорж╛ржиржХрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╢ржХрзНрждрж┐рждрзЗ (power) ржЙржирзНржирзАржд ржХрж░рзЗ ржПржмржВ ржлрж▓рж╛ржлрж▓ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗред

js
Copy
Edit
let x = 4;
x **= 3;  // x = x ** 3  (ржПржЦржи x ржПрж░ ржорж╛ржи 64)
рзо. Bitwise Assignment Operators
ЁЯСЙ Bitwise ржЕржкрж╛рж░рзЗржЯрж░рзЗрж░ ржЬржирзНржпржУ ржЕрзНржпрж╛рж╕рж╛ржЗржиржорзЗржирзНржЯ ржЕржкрж╛рж░рзЗржЯрж░ рж░ржпрж╝рзЗржЫрзЗ, ржпрзЗржоржи:

&= (AND)
|= (OR)
^= (XOR)
>>= (Right Shift)
<<= (Left Shift)
>>>= (Unsigned Right Shift)
js
Copy
Edit
let x = 5; // 0101 (Binary)
x &= 3;    // x = x & 3 (Binary: 0101 & 0011 = 0001)
console.log(x); // 1
тЬЕ рж╕ржВржХрзНрж╖рзЗржкрзЗ:
ржЕрзНржпрж╛рж╕рж╛ржЗржиржорзЗржирзНржЯ ржЕржкрж╛рж░рзЗржЯрж░ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржЖржорж░рж╛ ржнрзЗрж░рж┐ржпрж╝рзЗржмрж▓рзЗрж░ ржорж╛ржи ржкрж░рж┐ржмрж░рзНрждржи ржмрж╛ ржЖржкржбрзЗржЯ ржХрж░рждрзЗ ржкрж╛рж░рж┐ рж╕рж╣ржЬрзЗржЗред

рждрзЛржорж╛рж░ ржХрж┐ ржХрзЛржирзЛ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржЕржкрж╛рж░рзЗржЯрж░ рж╕ржорзНржкрж░рзНржХрзЗ ржЖрж░ржУ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржЬрж╛ржирждрзЗ ржЪрж╛ржЗ? ЁЯШК
 */

let n = 10

n += 90

console.log(n)

let x = 20

x -= 100

console.log(x)

let y = 80

y /= 30

console.log(y)

let z = 1000

z *= 2000
console.log(z)


let v = 300

v %= 400

console.log(v)